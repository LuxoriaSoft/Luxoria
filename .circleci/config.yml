version: 2.1

orbs:
  kubernetes: circleci/kubernetes@2.0.0

jobs:
  build-and-push:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Generate Image Tag
          command: |
            TAG=$(date +%Y%m%d).${CIRCLE_BUILD_NUM}
            echo "Generated tag: $TAG"
            echo $TAG > image_tag.txt

      - run:
          name: Docker Login
          command: |
            echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USER}" --password-stdin

      - run:
          name: Build & Push LuxAPI Image
          command: |
            TAG=$(cat image_tag.txt)
            docker build -t luxoria/luxapi:$TAG -f LuxStudio/LuxAPI/LuxAPI/Dockerfile LuxStudio/LuxAPI
            docker push luxoria/luxapi:$TAG

      - run:
          name: Build & Push LuxStudio Image
          command: |
            TAG=$(cat image_tag.txt)
            docker build -t luxoria/luxstudio:$TAG -f LuxStudio/portalv2/Dockerfile LuxStudio/portalv2
            docker push luxoria/luxstudio:$TAG

      - persist_to_workspace:
          root: .
          paths:
            - image_tag.txt

  tag-as-dev:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run:
          name: Docker Login
          command: |
            echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USER}" --password-stdin
      - run:
          name: Tag Version as dev
          command: |
            TAG=$(cat image_tag.txt)
            docker pull luxoria/luxapi:$TAG
            docker tag luxoria/luxapi:$TAG luxoria/luxapi:dev
            docker push luxoria/luxapi:dev

            docker pull luxoria/luxstudio:$TAG
            docker tag luxoria/luxstudio:$TAG luxoria/luxstudio:dev
            docker push luxoria/luxstudio:dev

  tag-as-latest:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker
      - run:
          name: Docker Login
          command: |
            echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USER}" --password-stdin
      - run:
          name: Tag dev as latest
          command: |
            docker pull luxoria/luxapi:dev
            docker tag luxoria/luxapi:dev luxoria/luxapi:latest
            docker push luxoria/luxapi:latest

            docker pull luxoria/luxstudio:dev
            docker tag luxoria/luxstudio:dev luxoria/luxstudio:latest
            docker push luxoria/luxstudio:latest

  deploy-to-pluto:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - kubernetes/install_kubectl
      - attach_workspace:
          at: .
      - kubernetes/install_kubeconfig:
          kubeconfig: KUBECONFIG_DATA
      - run:
          name: Plan a release
          command: |
            TAG=$(cat image_tag.txt)
            circleci run release plan --target-version=$TAG --environment-name=pluto --namespace=pluto
            circleci run release update --status=running
      - run:
          name: Inject tag for API and Studio images
          command: |
            TAG=$(cat image_tag.txt)
            sed -i "s|newTag:.*|newTag: \"$TAG\"|" LuxStudio/depl/overlays/pluto/kustomization.yaml
      - run:
          name: Debug Kustomization
          command: |
            echo "Debugging Kustomization"
            cat LuxStudio/depl/overlays/pluto/kustomization.yaml
      - kubernetes/create_or_update_resource:
          resource_file_path: ./LuxStudio/depl/overlays/pluto
          show_kubectl_command: true
          kustomize: true
      - run:
          name: Update a release
          command: |
            circleci run release update --status=SUCCESS

  deploy-to-saturn:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - kubernetes/install_kubectl
      - attach_workspace:
          at: .
      - kubernetes/install_kubeconfig:
          kubeconfig: KUBECONFIG_DATA
      - run:
          name: Plan a release
          command: |
            TAG=$(cat image_tag.txt)
            # circleci run release plan --target-version=$TAG --environment-name=saturn --namespace=saturn
            # circleci run release update --status=running
      - run:
          name: Inject tag for API and Studio images
          command: |
            TAG=$(cat image_tag.txt)
            sed -i "s|newTag:.*|newTag: \"$TAG\"|" LuxStudio/depl/overlays/saturn/kustomization.yaml
      - run:
          name: Debug Kustomization
          command: |
            echo "Debugging Kustomization"
            cat LuxStudio/depl/overlays/saturn/kustomization.yaml
      - kubernetes/create_or_update_resource:
          resource_file_path: ./LuxStudio/depl/overlays/saturn
          show_kubectl_command: true
          kustomize: true
      - run:
          name: Update a release
          command: |
            circleci run release update --status=SUCCESS

workflows:
  version: 2
  promote-release:
    jobs:
      - build-and-push:
          context: Luxoria

      - tag-as-dev:
          context: Luxoria
          requires:
            - build-and-push

      - request-approval-deploy-pluto:
          type: approval
          requires:
            - tag-as-dev

      - deploy-to-pluto:
          context: Luxoria
          requires:
            - request-approval-deploy-pluto

      - request-approval-tag-latest:
          type: approval
          requires:
            - deploy-to-pluto

      - tag-as-latest:
          context: Luxoria
          requires:
            - request-approval-tag-latest

      - request-approval-deploy-saturn:
          type: approval
          requires:
            - tag-as-latest

      - deploy-to-saturn:
          context: Luxoria
          requires:
            - request-approval-deploy-saturn
