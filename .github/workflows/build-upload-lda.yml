name: Luxoria Desktop App Release

on:
  push:
    branches:
      - main
      - develop
      - release/*
      - fix/ci/*
  pull_request:
    branches:
      - main
      - develop
      - release/*
  workflow_call:

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        configuration: [Release]
        framework: ["net9.0-windows10.0.26100.0"]
        platform: [x64, x86, arm64]

    env:
      Solution_Name: Luxoria.App.sln

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'  # Specify the .NET SDK version you are using
      
      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2
      
      # Restore the application to populate the obj folder with RuntimeIdentifiers
      - name: Restore the application
        run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
        env:
          Configuration: ${{ matrix.configuration }}
        working-directory: ./Luxoria.App

      # Create the app by building and publishing the project
      - name: Build Luxoria.App
        run: msbuild $env:Solution_Name /t:Publish /p:Configuration=$env:Configuration /p:Platform=$env:Platform
        env:
          Configuration: ${{ matrix.configuration }}
          Platform: ${{ matrix.platform }}
        working-directory: ./Luxoria.App
      
      # Install Inno Setup
      - name: Install Inno Setup Wizard
        run: choco install innosetup --no-progress -y

      # Build Inno Setup
      - name: Create installer using Luxoria.App
        run: |
          if ("${{ matrix.platform }}" -eq "win-x86") {
            $platformTarget = "x86"
          } elseif ("${{ matrix.platform }}" -eq "win-x64") {
            $platformTarget = "x64"
          } elseif ("${{ matrix.platform }}" -eq "win-arm64") {
            $platformTarget = "ARM64"
          } else {
            throw "Unknown platform: ${{ matrix.platform }}"
          }
          iscc build Luxoria.App/installer/$platformTarget/LuxInstall.iss
        shell: pwsh


      # Upload the app as an artifact
      - name: Upload Luxoria.App as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: Luxoria.App.${{ matrix.platform }}
          path: ./Luxoria.App/Luxoria.App/bin/${{ matrix.platform }}/${{ matrix.configuration }}/${{ matrix.framework }}/win-${{ matrix.platform }}/
